<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pri.mapper.WxUserMapper" >
  <resultMap id="BaseResultMap" type="com.pri.entity.WxUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="nid" property="nid" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="headimgurl" property="headimgurl" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, openid, nickname, sex, headimgurl, state, createdate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from wx_user
    where id = #{id,jdbcType=INTEGER}
  </select>
    <!-- 根据条件查询用户集合 -->
    <select id="selectUserListByCondition" resultType="com.pri.entity.WxUser">
      select * from wx_user where state in (-1,1)
        <if test="nickname !=null and nickname !=''">
            and nickname like '%${nickname}%'
        </if>
        <if test="state !=null and state !=''">
            and state = #{state,jdbcType=INTEGER}
        </if>
        <if test="sex != null and sex != ''" >
            and sex = #{sex,jdbcType=INTEGER}
        </if>
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from wx_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <!-- 根据主键进行逻辑删除 -->
    <update id="deleteLoginById" parameterType="java.lang.Integer">
        update wx_user set state = 0 where id = #{id}
    </update>
    <!-- 禁用、解禁 -->
    <update id="lock" parameterType="java.lang.Integer">
        update wx_user set state = #{type} where id = #{id}
    </update>
  <insert id="insert" parameterType="com.pri.entity.WxUser" useGeneratedKeys="true" keyProperty="id" >
      <!-- selectKey将主键返回，需要再返回 -->
<!--      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
          select LAST_INSERT_ID()
      </selectKey>-->
    insert into wx_user (id, openid, nid, nickname,
      sex, headimgurl, state, 
      createdate
    values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{nid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
      #{sex,jdbcType=INTEGER}, #{headimgurl,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{createdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pri.entity.WxUser" >
    insert into wx_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="headimgurl != null" >
        headimgurl,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="headimgurl != null" >
        #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pri.entity.WxUser" >
    update wx_user
    <set >
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="headimgurl != null" >
        headimgurl = #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pri.entity.WxUser" >
    update wx_user
    set openid = #{openid,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      headimgurl = #{headimgurl,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="userList" resultType="com.pri.entity.WxUser" parameterType="com.pri.entity.WxUser">
        SELECT * FROM wx_user
    </select>
    <select id="findUserList" resultType="com.pri.entity.WxUser" parameterType="com.pri.entity.WxUser">
        SELECT * FROM wx_user
    </select>
    <select id="selectByOpenid" resultType="com.pri.entity.WxUser" >
        SELECT * FROM wx_user
        where openid = #{openid,jdbcType=VARCHAR}
        and nid = #{nid,jdbcType=VARCHAR}
    </select>

    <insert id="insertUser" parameterType="com.pri.entity.TestUser">
      insert into user2 (userName,userAge) values
        (#{item.name},#{item.age})
    </insert>

    <insert id="insertUserList" parameterType="java.util.List">
        insert into user (userName,userAge) values
        <foreach collection="testUsers"  item="item" index="index" separator=",">
          (#{item.name},#{item.age})
        </foreach>
    </insert>
  <!--测试批量删除-->
  <delete id="delUserList" parameterType="java.util.List">
    delete from user where (userName,userAge) in
    <foreach collection="testUsers" item="item" index="index" separator="," open="(" close=")">
      (#{item.name},#{item.age})
    </foreach>
  </delete>
  <!--批量插入数据，数据存在时更新，不存在时插入-->
  <insert id="testAddUserListOrUpdate" parameterType="java.util.List">
    replace  into user2 (userName,userSex,userAge) values
    <foreach collection="testUsers"  item="item" index="index" separator=",">
      (#{item.name},#{item.sex},#{item.age})
    </foreach>
  </insert>
  <!--批量插入数据，数据存在时忽略，不存在时插入 ChenQi;-->
  <insert id="testAddUserListOrIgnore" parameterType="java.util.List">

    insert ignore user2 (userName,userSex,userAge) values
    <foreach collection="testUsers"  item="item" index="index" separator=",">
      (#{item.name},#{item.sex},#{item.age})
    </foreach>
  </insert>
</mapper>